name: MyCloudhub - Build And Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:    

jobs:
  build:
    runs-on: ubuntu-latest
    #environment: Sandbox
    env:
     
      PLATFORM_USERNAME: ${{secrets.PLATFORM_USERNAME}}
      PLATFORM_PASSWORD: ${{secrets.PLATFORM_PASSWORD}}
     

    steps:
  
      
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Checking Cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-      
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        #cache: maven    
        
    - name: Build with Maven
      run: mvn clean install -B package --file pom.xml
      
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar        
      
       

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{secrets.PLATFORM_USERNAME}}
      PLATFORM_PASSWORD: ${{secrets.PLATFORM_PASSWORD}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Checking Cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-      
    - uses: actions/download-artifact@master
      with:
        name: artifacts     
    - name: Deploy to Sandbox
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn package deploy -DmuleDeploy \
        -Dusername="$PLATFORM_USERNAME" \
        -Dpassword="$PLATFORM_PASSWORD" \ 
        -DskipTests
